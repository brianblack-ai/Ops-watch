name: Uptime-check

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"   # hourly, UTC

jobs:
  ping:
    runs-on: ubuntu-latest
    env:
      LATENCY_WARN_MS: "1200"  # alert if success but slower than this
    strategy:
      matrix:
        target:
          - { name: health, url: "https://lead-engine-lilac.vercel.app/api/health" }
    steps:
      - name: Ping ${{ matrix.target.name }}
        id: curl
        shell: bash
        run: |
          set -e
          start_ms=$(date +%s%3N)
          code=$(curl -s -o /dev/null -w "%{http_code}" "${{ matrix.target.url }}")
          end_ms=$(date +%s%3N)
          ms=$((end_ms - start_ms))
          echo "code=$code" >> "$GITHUB_OUTPUT"
          echo "ms=$ms" >> "$GITHUB_OUTPUT"
          if [ "$code" -lt 200 ] || [ "$code" -ge 300 ]; then
            exit 1
          fi

      - name: Notify Slack ONLY on failure or slow success
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
          CODE: ${{ steps.curl.outputs.code }}
          MS: ${{ steps.curl.outputs.ms }}
          TARGET_NAME: ${{ matrix.target.name }}
          TARGET_URL: ${{ matrix.target.url }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          LAT_WARN: ${{ env.LATENCY_WARN_MS }}
        shell: bash
        run: |
          send=false
          level="OK"
          if [ "$STATUS" != "success" ]; then
            send=true; level="FAIL"
          elif [ "$MS" -gt "$LAT_WARN" ]; then
            send=true; level="WARN"
          fi
          if $send; then
            payload=$(printf '{"text":"Uptime-check • %s • %s (%s) • code=%s • %sms • %s"}' \
              "$level" "$TARGET_NAME" "$TARGET_URL" "$CODE" "$MS" "$RUN_URL")
            curl -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"
          else
            echo "Skipping Slack: su

