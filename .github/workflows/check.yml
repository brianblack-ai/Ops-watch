name: Uptime-check

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"   # hourly (UTC)

permissions:
  contents: write          # <-- needed to commit status files

jobs:
  ping:
    runs-on: ubuntu-latest
    env:
      HEALTH_URL: "https://lead-engine-lilac.vercel.app/api/health"
      LATENCY_WARN_MS: "1200"  # alert on success if slower than this
    steps:
      # Needed so we can write files and commit them back
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ping health
        id: curl
        run: |
          set -e
          start_ms=$(date +%s%3N)
          code=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_URL")
          end_ms=$(date +%s%3N)
          ms=$((end_ms - start_ms))
          echo "code=$code" >> "$GITHUB_OUTPUT"
          echo "ms=$ms" >> "$GITHUB_OUTPUT"
          if [ "$code" -lt 200 ] || [ "$code" -ge 300 ]; then
            exit 1
          fi

      # --- NEW: write a JSON snapshot for this run ---
      - name: Write status snapshot
        if: always()
        env:
          CODE: ${{ steps.curl.outputs.code }}
          MS: ${{ steps.curl.outputs.ms }}
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          ts=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          mkdir -p status
          jq -n --arg ts "$ts" --arg code "$CODE" --arg ms "$MS" \
            '{timestamp:$ts, code:($code|tonumber), latency_ms:($ms|tonumber)}' \
            > "status/${ts//[:]/}.json"   # e.g. 2025-09-01T013000Z.json

      - name: Commit status snapshot
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(uptime-check): add status snapshot"
          file_pattern: "status/*.json"

      # Slack: alert only on fail or slow success
      - name: Notify Slack ONLY on failure or slow success
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
          CODE: ${{ steps.curl.outputs.code }}
          MS: ${{ steps.curl.outputs.ms }}
          HEALTH_URL: ${{ env.HEALTH_URL }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          LAT_WARN: ${{ env.LATENCY_WARN_MS }}
        run: |
          send=false
          level="OK"
          if [ "$STATUS" != "success" ]; then
            send=true; level="FAIL"
          elif [ "$MS" -gt "$LAT_WARN" ]; then
            send=true; level="WARN"
          fi
          if $send; then
            if ! command -v jq >/dev/null 2>&1; then
              sudo apt-get update -y && sudo apt-get install -y jq
            fi
            text="Uptime-check • ${level} • health (${HEALTH_URL}) • code=${CODE} • ${MS}ms • ${RUN_URL}"
            payload=$(jq -n --arg text "$text" '{text: $text}')
            curl -s -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK_URL"
          else
            echo "Skipping Slack: success and ${MS}ms <= ${LAT_WARN}ms"
          fi
